{"ast":null,"code":"var _jsxFileName = \"/Users/tequam/Projects/case-frontend-tequamnesh/src/components/CandidateList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CANDIDATE_STATE = [{\n  id: 'contact_id',\n  state: 'CONTACT'\n}, {\n  id: 'dialog_id',\n  state: 'DIALOGUE'\n}, {\n  id: 'interview_id',\n  state: 'INTERVIEW'\n}, {\n  id: 'closed_id',\n  state: 'CLOSED'\n}];\nconst CandidateList = ({\n  candidates,\n  removeCandidate\n}) => {\n  _s();\n  const [newcandidates, setNewcandidates] = useState(candidates);\n  const handleDragDrop = result => {\n    const {\n      destination,\n      source\n    } = result;\n    console.log(result);\n    const sourceIndex = source.index;\n    const destinationIndex = destination.index;\n    if (!destination || destination.draggableId === source.draggableId) return;\n    if (destination.draggableId !== source.draggableId) {\n      const reorderdItems = [...newcandidates];\n      setNewcandidates(candidates => candidates.map(candidate => candidate.id === result.draggableId ? {\n        ...candidate,\n        status: result.destination.droppableId\n      } : candidate));\n      console.log('newcan', newcandidates);\n    }\n    // const reorderdItems = [...newcandidates]\n    // const [removedItem] = reorderdItems.splice(sourceIndex, 1)\n    // reorderdItems.splice(destinationIndex, 0, removedItem)\n    // return setNewcandidates(reorderdItems)\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Candidate List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      },\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleDragDrop,\n        children: CANDIDATE_STATE.map(categori => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: categori.state,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            children: [categori.state, /*#__PURE__*/_jsxDEV(\"div\", {\n              children: newcandidates.filter(candidate => candidate.status === categori.state).map((candidate, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: candidate.id,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ...provided.dragHandleProps,\n                  ...provided.draggableProps,\n                  ref: provided.innerRef,\n                  children: [candidate.name, \" - \", candidate.status]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 29\n                }, this)\n              }, candidate.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this)\n        }, categori.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  // return (\n  //   <>\n  //     <h1>Candidate List</h1>\n  //     <DragDropContext onDragEnd={handleDragDrop}>\n  //       <div style={{ display: 'flex', flexDirection: 'row'} }>\n  //       <div style={{ background: 'green'}}>\n  //         <Droppable droppableId='CONTACT'>\n  //         {(provided) => (\n  //           <div {...provided.droppableProps} ref={provided.innerRef}>\n  //             <div>\n  //               {newcandidates.map((candidate, index) => (\n  //                 <Draggable draggableId={candidate.id} key={candidate.id} index={index}>\n  //                   {(provided) => (\n  //                     <div {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef}>\n  //                       {candidate.name} - {candidate.currentStage}\n  //                       {/* <button onClick={() => removeCandidate(candidate.id)}>Remove</button> */}\n  //                     </div>\n  //                   )}\n\n  //                 </Draggable>\n  //               ))}\n  //             </div>\n  //             {provided.placeholder}\n  //         </div>\n  //         )}\n  //         </Droppable>\n  //       </div>\n\n  //       <div style={{ background: 'blue'}}>\n  //         <Droppable droppableId='DIALOGUE'>\n  //         {(provided) => (\n  //           <div {...provided.droppableProps} ref={provided.innerRef}>\n  //           <div>\n  //             {CANDIDATE_STATE.map((candidate, index) => (\n  //               <Draggable draggableId={candidate.id} key={candidate.id} index={index}>\n  //                 {(provided) => (\n  //                   <div {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef}>\n  //                     {candidate.id} - {candidate.state}\n  //                     {/* <button onClick={() => removeCandidate(candidate.id)}>Remove</button> */}\n  //                   </div>\n  //               )}\n\n  //               </Draggable>\n  //             ))}\n  //           </div>\n  //             {provided.placeholder}\n  //         </div>\n  //         )}\n  //         </Droppable>\n  //       </div>\n  //       </div>\n  //     </DragDropContext>\n  //   </>\n  // )\n};\n_s(CandidateList, \"AV9SdC/b92ken6Wc6PAvZlDVgwE=\");\n_c = CandidateList;\nexport default CandidateList;\nvar _c;\n$RefreshReg$(_c, \"CandidateList\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Fragment","_Fragment","CANDIDATE_STATE","id","state","CandidateList","candidates","removeCandidate","_s","newcandidates","setNewcandidates","handleDragDrop","result","destination","source","console","log","sourceIndex","index","destinationIndex","draggableId","reorderdItems","map","candidate","status","droppableId","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexDirection","justifyContent","onDragEnd","categori","provided","droppableProps","ref","innerRef","filter","dragHandleProps","draggableProps","name","placeholder","_c","$RefreshReg$"],"sources":["/Users/tequam/Projects/case-frontend-tequamnesh/src/components/CandidateList.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Candidate } from '../types/CandidateType';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst CANDIDATE_STATE = [\n  { id: 'contact_id', state: 'CONTACT'},\n  { id: 'dialog_id', state: 'DIALOGUE'},\n  { id: 'interview_id', state: 'INTERVIEW'},\n  { id: 'closed_id', state: 'CLOSED'},\n]\n\ninterface CandidateListProps {\n  candidates: Candidate[];\n  removeCandidate: (id: string) => void;\n}\n\nconst CandidateList: React.FC<CandidateListProps> = ({ candidates, removeCandidate }) => {\n\n  const [newcandidates, setNewcandidates] = useState(candidates)\n\n  const handleDragDrop = (result: any) => {\n    const { destination, source } = result\n    console.log(result)\n    const sourceIndex = source.index\n    const destinationIndex = destination.index\n    if(!destination || destination.draggableId === source.draggableId) return\n\n    if(destination.draggableId !== source.draggableId){\n      const reorderdItems = [...newcandidates]\n      setNewcandidates((candidates) =>\n        candidates.map((candidate) =>\n          candidate.id === result.draggableId\n            ?\n            {\n                ...candidate,\n                status: result.destination.droppableId,\n              }\n            : candidate\n        )\n      );\n      console.log('newcan', newcandidates)\n    }\n    // const reorderdItems = [...newcandidates]\n    // const [removedItem] = reorderdItems.splice(sourceIndex, 1)\n    // reorderdItems.splice(destinationIndex, 0, removedItem)\n    // return setNewcandidates(reorderdItems)\n  }\n\n  return (\n    <>\n      <h1>Candidate List</h1>\n      <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between'} }>\n        <DragDropContext onDragEnd={handleDragDrop}>\n            {CANDIDATE_STATE.map((categori) => (\n              <Droppable droppableId={categori.state} key={categori.id}>\n                {(provided) => (\n                  <div {...provided.droppableProps} ref={provided.innerRef}>{categori.state}\n                    <div>\n                      {newcandidates\n                        .filter((candidate) => candidate.status === categori.state)\n                        .map((candidate, index) => (\n                        <Draggable draggableId={candidate.id} key={candidate.id} index={index}>\n                          {(provided) => (\n                            <div {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef}>\n                              {candidate.name} - {candidate.status}\n                              {/* <button onClick={() => removeCandidate(candidate.id)}>Remove</button> */}\n                            </div>\n                          )}\n\n                        </Draggable>\n                      ))}\n                    </div>\n                    {provided.placeholder}\n                </div>\n                )}\n              </Droppable>\n            ))}\n        </DragDropContext>\n      </div>\n    </>\n  )\n  // return (\n  //   <>\n  //     <h1>Candidate List</h1>\n  //     <DragDropContext onDragEnd={handleDragDrop}>\n  //       <div style={{ display: 'flex', flexDirection: 'row'} }>\n  //       <div style={{ background: 'green'}}>\n  //         <Droppable droppableId='CONTACT'>\n  //         {(provided) => (\n  //           <div {...provided.droppableProps} ref={provided.innerRef}>\n  //             <div>\n  //               {newcandidates.map((candidate, index) => (\n  //                 <Draggable draggableId={candidate.id} key={candidate.id} index={index}>\n  //                   {(provided) => (\n  //                     <div {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef}>\n  //                       {candidate.name} - {candidate.currentStage}\n  //                       {/* <button onClick={() => removeCandidate(candidate.id)}>Remove</button> */}\n  //                     </div>\n  //                   )}\n\n  //                 </Draggable>\n  //               ))}\n  //             </div>\n  //             {provided.placeholder}\n  //         </div>\n  //         )}\n  //         </Droppable>\n  //       </div>\n\n  //       <div style={{ background: 'blue'}}>\n  //         <Droppable droppableId='DIALOGUE'>\n  //         {(provided) => (\n  //           <div {...provided.droppableProps} ref={provided.innerRef}>\n  //           <div>\n  //             {CANDIDATE_STATE.map((candidate, index) => (\n  //               <Draggable draggableId={candidate.id} key={candidate.id} index={index}>\n  //                 {(provided) => (\n  //                   <div {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef}>\n  //                     {candidate.id} - {candidate.state}\n  //                     {/* <button onClick={() => removeCandidate(candidate.id)}>Remove</button> */}\n  //                   </div>\n  //               )}\n\n  //               </Draggable>\n  //             ))}\n  //           </div>\n  //             {provided.placeholder}\n  //         </div>\n  //         )}\n  //         </Droppable>\n  //       </div>\n  //       </div>\n  //     </DragDropContext>\n  //   </>\n  // )\n}\n\nexport default CandidateList\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5E,MAAMC,eAAe,GAAG,CACtB;EAAEC,EAAE,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAS,CAAC,EACrC;EAAED,EAAE,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAU,CAAC,EACrC;EAAED,EAAE,EAAE,cAAc;EAAEC,KAAK,EAAE;AAAW,CAAC,EACzC;EAAED,EAAE,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAQ,CAAC,CACpC;AAOD,MAAMC,aAA2C,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAEvF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAACY,UAAU,CAAC;EAE9D,MAAMK,cAAc,GAAIC,MAAW,IAAK;IACtC,MAAM;MAAEC,WAAW;MAAEC;IAAO,CAAC,GAAGF,MAAM;IACtCG,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;IACnB,MAAMK,WAAW,GAAGH,MAAM,CAACI,KAAK;IAChC,MAAMC,gBAAgB,GAAGN,WAAW,CAACK,KAAK;IAC1C,IAAG,CAACL,WAAW,IAAIA,WAAW,CAACO,WAAW,KAAKN,MAAM,CAACM,WAAW,EAAE;IAEnE,IAAGP,WAAW,CAACO,WAAW,KAAKN,MAAM,CAACM,WAAW,EAAC;MAChD,MAAMC,aAAa,GAAG,CAAC,GAAGZ,aAAa,CAAC;MACxCC,gBAAgB,CAAEJ,UAAU,IAC1BA,UAAU,CAACgB,GAAG,CAAEC,SAAS,IACvBA,SAAS,CAACpB,EAAE,KAAKS,MAAM,CAACQ,WAAW,GAEjC;QACI,GAAGG,SAAS;QACZC,MAAM,EAAEZ,MAAM,CAACC,WAAW,CAACY;MAC7B,CAAC,GACDF,SACN,CACF,CAAC;MACDR,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEP,aAAa,CAAC;IACtC;IACA;IACA;IACA;IACA;EACF,CAAC;EAED,oBACEV,OAAA,CAAAE,SAAA;IAAAyB,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB/B,OAAA;MAAKgC,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE,KAAK;QAAEC,cAAc,EAAE;MAAe,CAAG;MAAAR,QAAA,eACrF3B,OAAA,CAACJ,eAAe;QAACwC,SAAS,EAAExB,cAAe;QAAAe,QAAA,EACtCxB,eAAe,CAACoB,GAAG,CAAEc,QAAQ,iBAC5BrC,OAAA,CAACH,SAAS;UAAC6B,WAAW,EAAEW,QAAQ,CAAChC,KAAM;UAAAsB,QAAA,EACnCW,QAAQ,iBACRtC,OAAA;YAAA,GAASsC,QAAQ,CAACC,cAAc;YAAEC,GAAG,EAAEF,QAAQ,CAACG,QAAS;YAAAd,QAAA,GAAEU,QAAQ,CAAChC,KAAK,eACvEL,OAAA;cAAA2B,QAAA,EACGjB,aAAa,CACXgC,MAAM,CAAElB,SAAS,IAAKA,SAAS,CAACC,MAAM,KAAKY,QAAQ,CAAChC,KAAK,CAAC,CAC1DkB,GAAG,CAAC,CAACC,SAAS,EAAEL,KAAK,kBACtBnB,OAAA,CAACF,SAAS;gBAACuB,WAAW,EAAEG,SAAS,CAACpB,EAAG;gBAAoBe,KAAK,EAAEA,KAAM;gBAAAQ,QAAA,EAClEW,QAAQ,iBACRtC,OAAA;kBAAA,GAASsC,QAAQ,CAACK,eAAe;kBAAA,GAAML,QAAQ,CAACM,cAAc;kBAAEJ,GAAG,EAAEF,QAAQ,CAACG,QAAS;kBAAAd,QAAA,GACpFH,SAAS,CAACqB,IAAI,EAAC,KAAG,EAACrB,SAAS,CAACC,MAAM;gBAAA;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEjC;cACN,GANwCP,SAAS,CAACpB,EAAE;gBAAAwB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAQ5C,CACZ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,EACLO,QAAQ,CAACQ,WAAW;UAAA;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB;QACJ,GApB0CM,QAAQ,CAACjC,EAAE;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAqB7C,CACZ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACW;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA,eACN,CAAC;EAEL;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAAAtB,EAAA,CAvHKH,aAA2C;AAAAyC,EAAA,GAA3CzC,aAA2C;AAyHjD,eAAeA,aAAa;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}