{"ast":null,"code":"var _jsxFileName = \"/Users/tequam/Projects/case-frontend-tequamnesh/src/components/CandidateList.tsx\";\nimport React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CANDIDATE_STATE = [{\n  id: 'contact_id',\n  state: 'CONTACT'\n}, {\n  id: 'dialog_id',\n  state: 'DIALOGUE'\n}, {\n  id: 'interview_id',\n  state: 'INTERVIEW'\n}, {\n  id: 'closed_id',\n  state: 'CLOSED'\n}];\nconst CandidateList = ({\n  candidates,\n  removeCandidate\n}) => {\n  const handleDragDrop = result => {\n    const {\n      destination,\n      source,\n      type\n    } = result;\n    if (!destination || destination.draggableId === source.draggableId && source.index === destination.index) return;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Candidate List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragDrop,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'green'\n          },\n          children: /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"CONTACT\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: candidates.map((candidate, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: candidate.id,\n                  index: index,\n                  children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                    ...provided.dragHandleProps,\n                    ...provided.draggableProps,\n                    ref: provided.innerRef,\n                    children: [candidate.name, \" - \", candidate.currentStage]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 36,\n                    columnNumber: 23\n                  }, this)\n                }, candidate.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 19\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 15\n              }, this), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'blue'\n          },\n          children: /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"DIALOGUE\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: CANDIDATE_STATE.map((candidate, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: candidate.id,\n                  index: index,\n                  children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                    ...provided.dragHandleProps,\n                    ...provided.draggableProps,\n                    ref: provided.innerRef,\n                    children: [candidate.id, \" - \", candidate.state]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 21\n                  }, this)\n                }, candidate.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 17\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 13\n              }, this), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = CandidateList;\nexport default CandidateList;\nvar _c;\n$RefreshReg$(_c, \"CandidateList\");","map":{"version":3,"names":["React","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Fragment","_Fragment","CANDIDATE_STATE","id","state","CandidateList","candidates","removeCandidate","handleDragDrop","result","destination","source","type","draggableId","index","children","fileName","_jsxFileName","lineNumber","columnNumber","onDragEnd","style","display","flexDirection","background","droppableId","provided","droppableProps","ref","innerRef","map","candidate","dragHandleProps","draggableProps","name","currentStage","placeholder","_c","$RefreshReg$"],"sources":["/Users/tequam/Projects/case-frontend-tequamnesh/src/components/CandidateList.tsx"],"sourcesContent":["import React from 'react';\nimport { Candidate } from '../types/CandidateType';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst CANDIDATE_STATE = [\n  { id: 'contact_id', state: 'CONTACT'},\n  { id: 'dialog_id', state: 'DIALOGUE'},\n  { id: 'interview_id', state: 'INTERVIEW'},\n  { id: 'closed_id', state: 'CLOSED'},\n]\n\ninterface CandidateListProps {\n  candidates: Candidate[];\n  removeCandidate: (id: string) => void;\n}\n\nconst CandidateList: React.FC<CandidateListProps> = ({ candidates, removeCandidate }) => {\n  const handleDragDrop = (result: any) => {\n    const { destination, source, type } = result\n    if(!destination || (destination.draggableId === source.draggableId && source.index === destination.index)) return\n  }\n\n  return (\n    <>\n      <h1>Candidate List</h1>\n      <DragDropContext onDragEnd={handleDragDrop}>\n        <div style={{ display: 'flex', flexDirection: 'row'} }>\n        <div style={{ background: 'green'}}>\n          <Droppable droppableId='CONTACT'>\n          {(provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              <div>\n                {candidates.map((candidate, index) => (\n                  <Draggable draggableId={candidate.id} key={candidate.id} index={index}>\n                    {(provided) => (\n                      <div {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef}>\n                        {candidate.name} - {candidate.currentStage}\n                        {/* <button onClick={() => removeCandidate(candidate.id)}>Remove</button> */}\n                      </div>\n                    )}\n\n                  </Draggable>\n                ))}\n              </div>\n              {provided.placeholder}\n          </div>\n          )}\n          </Droppable>\n        </div>\n\n        <div style={{ background: 'blue'}}>\n          <Droppable droppableId='DIALOGUE'>\n          {(provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n            <div>\n              {CANDIDATE_STATE.map((candidate, index) => (\n                <Draggable draggableId={candidate.id} key={candidate.id} index={index}>\n                  {(provided) => (\n                    <div {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef}>\n                      {candidate.id} - {candidate.state}\n                      {/* <button onClick={() => removeCandidate(candidate.id)}>Remove</button> */}\n                    </div>\n                  )}\n\n                </Draggable>\n              ))}\n            </div>\n              {provided.placeholder}\n          </div>\n          )}\n          </Droppable>\n        </div>\n        </div>\n      </DragDropContext>\n    </>\n  )\n}\n\nexport default CandidateList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}