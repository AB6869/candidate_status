{"ast":null,"code":"var _jsxFileName = \"/Users/tequam/Projects/case-frontend-tequamnesh/src/components/CandidateList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CANDIDATE_STATE = [{\n  id: 'contact_id',\n  state: 'CONTACT'\n}, {\n  id: 'dialog_id',\n  state: 'DIALOGUE'\n}, {\n  id: 'interview_id',\n  state: 'INTERVIEW'\n}, {\n  id: 'closed_id',\n  state: 'CLOSED'\n}];\nconst CandidateList = ({\n  candidates,\n  removeCandidate\n}) => {\n  _s();\n  const [newcandidates, setNewcandidates] = useState(candidates);\n  const handleDragDrop = result => {\n    const {\n      destination,\n      source\n    } = result;\n    console.log(result);\n    const sourceIndex = source.index;\n    const destinationIndex = destination.index;\n    if (!destination || destination.droppableId === source.droppableId) return;\n    if (destination.droppableId !== source.droppableId) {\n      // console.log(newcandidates)\n      // newcandidates[sourceIndex].status = destination.draggableId\n      const updateState = newcandidates[sourceIndex].status = destination.droppableId;\n      setNewcandidates([...newcandidates, updateState]);\n      // setNewcandidates([...newcandidates])\n      // setNewcandidates((candidates) =>\n      //   candidates.map((candidate) =>\n      //     candidate.id === result.draggableId\n      //       ? {\n      //           ...candidate,\n      //           status: result.destination.droppableId,\n      //         }\n      //       : candidate\n      //   )\n      // );\n    }\n    // const reorderdItems = [...newcandidates]\n    // const [removedItem] = reorderdItems.splice(sourceIndex, 1)\n    // reorderdItems.splice(destinationIndex, 0, removedItem)\n    // return setNewcandidates(reorderdItems)\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Candidate List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      },\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleDragDrop,\n        children: CANDIDATE_STATE.map(categori => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: categori.state,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            children: [categori.state, /*#__PURE__*/_jsxDEV(\"div\", {\n              children: newcandidates.filter(candidate => candidate.status === categori.state).map((candidate, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: candidate.id,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ...provided.dragHandleProps,\n                  ...provided.draggableProps,\n                  ref: provided.innerRef,\n                  children: [candidate.name, \" - \", candidate.status]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 29\n                }, this)\n              }, candidate.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this)\n        }, categori.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  // return (\n  //   <>\n  //     <h1>Candidate List</h1>\n  //     <DragDropContext onDragEnd={handleDragDrop}>\n  //       <div style={{ display: 'flex', flexDirection: 'row'} }>\n  //       <div style={{ background: 'green'}}>\n  //         <Droppable droppableId='CONTACT'>\n  //         {(provided) => (\n  //           <div {...provided.droppableProps} ref={provided.innerRef}>\n  //             <div>\n  //               {newcandidates.map((candidate, index) => (\n  //                 <Draggable draggableId={candidate.id} key={candidate.id} index={index}>\n  //                   {(provided) => (\n  //                     <div {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef}>\n  //                       {candidate.name} - {candidate.currentStage}\n  //                       {/* <button onClick={() => removeCandidate(candidate.id)}>Remove</button> */}\n  //                     </div>\n  //                   )}\n\n  //                 </Draggable>\n  //               ))}\n  //             </div>\n  //             {provided.placeholder}\n  //         </div>\n  //         )}\n  //         </Droppable>\n  //       </div>\n\n  //       <div style={{ background: 'blue'}}>\n  //         <Droppable droppableId='DIALOGUE'>\n  //         {(provided) => (\n  //           <div {...provided.droppableProps} ref={provided.innerRef}>\n  //           <div>\n  //             {CANDIDATE_STATE.map((candidate, index) => (\n  //               <Draggable draggableId={candidate.id} key={candidate.id} index={index}>\n  //                 {(provided) => (\n  //                   <div {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef}>\n  //                     {candidate.id} - {candidate.state}\n  //                     {/* <button onClick={() => removeCandidate(candidate.id)}>Remove</button> */}\n  //                   </div>\n  //               )}\n\n  //               </Draggable>\n  //             ))}\n  //           </div>\n  //             {provided.placeholder}\n  //         </div>\n  //         )}\n  //         </Droppable>\n  //       </div>\n  //       </div>\n  //     </DragDropContext>\n  //   </>\n  // )\n};\n_s(CandidateList, \"AV9SdC/b92ken6Wc6PAvZlDVgwE=\");\n_c = CandidateList;\nexport default CandidateList;\nvar _c;\n$RefreshReg$(_c, \"CandidateList\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Fragment","_Fragment","CANDIDATE_STATE","id","state","CandidateList","candidates","removeCandidate","_s","newcandidates","setNewcandidates","handleDragDrop","result","destination","source","console","log","sourceIndex","index","destinationIndex","droppableId","updateState","status","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexDirection","justifyContent","onDragEnd","map","categori","provided","droppableProps","ref","innerRef","filter","candidate","draggableId","dragHandleProps","draggableProps","name","placeholder","_c","$RefreshReg$"],"sources":["/Users/tequam/Projects/case-frontend-tequamnesh/src/components/CandidateList.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Candidate } from '../types/CandidateType';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst CANDIDATE_STATE = [\n  { id: 'contact_id', state: 'CONTACT'},\n  { id: 'dialog_id', state: 'DIALOGUE'},\n  { id: 'interview_id', state: 'INTERVIEW'},\n  { id: 'closed_id', state: 'CLOSED'},\n]\n\ninterface CandidateListProps {\n  candidates: Candidate[];\n  removeCandidate: (id: string) => void;\n}\n\nconst CandidateList: React.FC<CandidateListProps> = ({ candidates, removeCandidate }) => {\n\n  const [newcandidates, setNewcandidates] = useState(candidates)\n\n  const handleDragDrop = (result: any) => {\n    const { destination, source } = result\n    console.log(result)\n    const sourceIndex = source.index\n    const destinationIndex = destination.index\n\n    if(!destination || destination.droppableId === source.droppableId) return\n\n    if(destination.droppableId !== source.droppableId){\n      // console.log(newcandidates)\n      // newcandidates[sourceIndex].status = destination.draggableId\n      const updateState = newcandidates[sourceIndex].status = destination.droppableId\n      setNewcandidates([...newcandidates, updateState])\n      // setNewcandidates([...newcandidates])\n      // setNewcandidates((candidates) =>\n      //   candidates.map((candidate) =>\n      //     candidate.id === result.draggableId\n      //       ? {\n      //           ...candidate,\n      //           status: result.destination.droppableId,\n      //         }\n      //       : candidate\n      //   )\n      // );\n    }\n    // const reorderdItems = [...newcandidates]\n    // const [removedItem] = reorderdItems.splice(sourceIndex, 1)\n    // reorderdItems.splice(destinationIndex, 0, removedItem)\n    // return setNewcandidates(reorderdItems)\n  }\n\n  return (\n    <>\n      <h1>Candidate List</h1>\n      <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between'} }>\n        <DragDropContext onDragEnd={handleDragDrop}>\n            {CANDIDATE_STATE.map((categori) => (\n              <Droppable droppableId={categori.state} key={categori.id}>\n                {(provided) => (\n                  <div {...provided.droppableProps} ref={provided.innerRef}>{categori.state}\n                    <div>\n                      {newcandidates\n                        .filter((candidate) => candidate.status === categori.state)\n                        .map((candidate, index) => (\n                        <Draggable draggableId={candidate.id} key={candidate.id} index={index}>\n                          {(provided) => (\n                            <div {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef}>\n                              {candidate.name} - {candidate.status}\n                              {/* <button onClick={() => removeCandidate(candidate.id)}>Remove</button> */}\n                            </div>\n                          )}\n\n                        </Draggable>\n                      ))}\n                    </div>\n                    {provided.placeholder}\n                </div>\n                )}\n              </Droppable>\n            ))}\n        </DragDropContext>\n      </div>\n    </>\n  )\n  // return (\n  //   <>\n  //     <h1>Candidate List</h1>\n  //     <DragDropContext onDragEnd={handleDragDrop}>\n  //       <div style={{ display: 'flex', flexDirection: 'row'} }>\n  //       <div style={{ background: 'green'}}>\n  //         <Droppable droppableId='CONTACT'>\n  //         {(provided) => (\n  //           <div {...provided.droppableProps} ref={provided.innerRef}>\n  //             <div>\n  //               {newcandidates.map((candidate, index) => (\n  //                 <Draggable draggableId={candidate.id} key={candidate.id} index={index}>\n  //                   {(provided) => (\n  //                     <div {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef}>\n  //                       {candidate.name} - {candidate.currentStage}\n  //                       {/* <button onClick={() => removeCandidate(candidate.id)}>Remove</button> */}\n  //                     </div>\n  //                   )}\n\n  //                 </Draggable>\n  //               ))}\n  //             </div>\n  //             {provided.placeholder}\n  //         </div>\n  //         )}\n  //         </Droppable>\n  //       </div>\n\n  //       <div style={{ background: 'blue'}}>\n  //         <Droppable droppableId='DIALOGUE'>\n  //         {(provided) => (\n  //           <div {...provided.droppableProps} ref={provided.innerRef}>\n  //           <div>\n  //             {CANDIDATE_STATE.map((candidate, index) => (\n  //               <Draggable draggableId={candidate.id} key={candidate.id} index={index}>\n  //                 {(provided) => (\n  //                   <div {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef}>\n  //                     {candidate.id} - {candidate.state}\n  //                     {/* <button onClick={() => removeCandidate(candidate.id)}>Remove</button> */}\n  //                   </div>\n  //               )}\n\n  //               </Draggable>\n  //             ))}\n  //           </div>\n  //             {provided.placeholder}\n  //         </div>\n  //         )}\n  //         </Droppable>\n  //       </div>\n  //       </div>\n  //     </DragDropContext>\n  //   </>\n  // )\n}\n\nexport default CandidateList\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}