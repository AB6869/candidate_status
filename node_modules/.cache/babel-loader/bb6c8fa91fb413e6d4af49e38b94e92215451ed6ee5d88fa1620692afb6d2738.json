{"ast":null,"code":"var _jsxFileName = \"/Users/tequam/Projects/case-frontend-tequamnesh/src/components/CandidateList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CANDIDATE_STATE = [{\n  id: 'contact_id',\n  state: 'CONTACT'\n}, {\n  id: 'dialog_id',\n  state: 'DIALOGUE'\n}, {\n  id: 'interview_id',\n  state: 'INTERVIEW'\n}, {\n  id: 'closed_id',\n  state: 'CLOSED'\n}];\nconst CandidateList = ({\n  candidates,\n  removeCandidate\n}) => {\n  _s();\n  const [newcandidates, setNewcandidates] = useState(candidates);\n  const handleDragDrop = result => {\n    const {\n      destination,\n      source\n    } = result;\n    const sourceIndex = source.index;\n    const destinationIndex = destination.index;\n    if (!destination || destination.draggableId === source.draggableId && sourceIndex === destinationIndex) return;\n    const reorderdItems = [...newcandidates];\n    const [removedItem] = reorderdItems.splice(sourceIndex, 1);\n    reorderdItems.splice(destinationIndex, 0, removedItem);\n    return setNewcandidates(reorderdItems);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Candidate List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragDrop,\n      children: CANDIDATE_STATE.map(candidate => /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: candidate.state,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          style: {\n            display: 'flex',\n            flexDirection: 'row'\n          },\n          children: [candidate.state, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: newcandidates.map((candidate, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: candidate.id,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ...provided.dragHandleProps,\n                ...provided.draggableProps,\n                ref: provided.innerRef,\n                children: [candidate.name, \" - \", candidate.currentStage]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 25\n              }, this)\n            }, candidate.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, candidate.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n  // return (\n  //   <>\n  //     <h1>Candidate List</h1>\n  //     <DragDropContext onDragEnd={handleDragDrop}>\n  //       <div style={{ display: 'flex', flexDirection: 'row'} }>\n  //       <div style={{ background: 'green'}}>\n  //         <Droppable droppableId='CONTACT'>\n  //         {(provided) => (\n  //           <div {...provided.droppableProps} ref={provided.innerRef}>\n  //             <div>\n  //               {newcandidates.map((candidate, index) => (\n  //                 <Draggable draggableId={candidate.id} key={candidate.id} index={index}>\n  //                   {(provided) => (\n  //                     <div {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef}>\n  //                       {candidate.name} - {candidate.currentStage}\n  //                       {/* <button onClick={() => removeCandidate(candidate.id)}>Remove</button> */}\n  //                     </div>\n  //                   )}\n\n  //                 </Draggable>\n  //               ))}\n  //             </div>\n  //             {provided.placeholder}\n  //         </div>\n  //         )}\n  //         </Droppable>\n  //       </div>\n\n  //       <div style={{ background: 'blue'}}>\n  //         <Droppable droppableId='DIALOGUE'>\n  //         {(provided) => (\n  //           <div {...provided.droppableProps} ref={provided.innerRef}>\n  //           <div>\n  //             {CANDIDATE_STATE.map((candidate, index) => (\n  //               <Draggable draggableId={candidate.id} key={candidate.id} index={index}>\n  //                 {(provided) => (\n  //                   <div {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef}>\n  //                     {candidate.id} - {candidate.state}\n  //                     {/* <button onClick={() => removeCandidate(candidate.id)}>Remove</button> */}\n  //                   </div>\n  //               )}\n\n  //               </Draggable>\n  //             ))}\n  //           </div>\n  //             {provided.placeholder}\n  //         </div>\n  //         )}\n  //         </Droppable>\n  //       </div>\n  //       </div>\n  //     </DragDropContext>\n  //   </>\n  // )\n};\n_s(CandidateList, \"AV9SdC/b92ken6Wc6PAvZlDVgwE=\");\n_c = CandidateList;\nexport default CandidateList;\nvar _c;\n$RefreshReg$(_c, \"CandidateList\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Fragment","_Fragment","CANDIDATE_STATE","id","state","CandidateList","candidates","removeCandidate","_s","newcandidates","setNewcandidates","handleDragDrop","result","destination","source","sourceIndex","index","destinationIndex","draggableId","reorderdItems","removedItem","splice","children","fileName","_jsxFileName","lineNumber","columnNumber","onDragEnd","map","candidate","droppableId","provided","droppableProps","ref","innerRef","style","display","flexDirection","dragHandleProps","draggableProps","name","currentStage","placeholder","_c","$RefreshReg$"],"sources":["/Users/tequam/Projects/case-frontend-tequamnesh/src/components/CandidateList.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Candidate } from '../types/CandidateType';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst CANDIDATE_STATE = [\n  { id: 'contact_id', state: 'CONTACT'},\n  { id: 'dialog_id', state: 'DIALOGUE'},\n  { id: 'interview_id', state: 'INTERVIEW'},\n  { id: 'closed_id', state: 'CLOSED'},\n]\n\ninterface CandidateListProps {\n  candidates: Candidate[];\n  removeCandidate: (id: string) => void;\n}\n\nconst CandidateList: React.FC<CandidateListProps> = ({ candidates, removeCandidate }) => {\n  const [newcandidates, setNewcandidates] = useState(candidates)\n  const handleDragDrop = (result: any) => {\n    const { destination, source } = result\n    const sourceIndex = source.index\n    const destinationIndex = destination.index\n    if(!destination || (destination.draggableId === source.draggableId && sourceIndex === destinationIndex)) return\n\n    const reorderdItems = [...newcandidates]\n    const [removedItem] = reorderdItems.splice(sourceIndex, 1)\n    reorderdItems.splice(destinationIndex, 0, removedItem)\n    return setNewcandidates(reorderdItems)\n  }\n\n  return (\n    <>\n    <h1>Candidate List</h1>\n    <DragDropContext onDragEnd={handleDragDrop}>\n        {CANDIDATE_STATE.map((candidate) => (\n          <Droppable droppableId={candidate.state} key={candidate.id}>\n            {(provided) => (\n              <div {...provided.droppableProps} ref={provided.innerRef} style={{ display: 'flex', flexDirection: 'row'} }>{candidate.state}\n                <div>\n                  {newcandidates.map((candidate, index) => (\n                    <Draggable draggableId={candidate.id} key={candidate.id} index={index}>\n                      {(provided) => (\n                        <div {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef}>\n                          {candidate.name} - {candidate.currentStage}\n                          {/* <button onClick={() => removeCandidate(candidate.id)}>Remove</button> */}\n                        </div>\n                      )}\n\n                    </Draggable>\n                  ))}\n                </div>\n                {provided.placeholder}\n            </div>\n            )}\n          </Droppable>\n        ))}\n      </DragDropContext>\n    </>\n  )\n  // return (\n  //   <>\n  //     <h1>Candidate List</h1>\n  //     <DragDropContext onDragEnd={handleDragDrop}>\n  //       <div style={{ display: 'flex', flexDirection: 'row'} }>\n  //       <div style={{ background: 'green'}}>\n  //         <Droppable droppableId='CONTACT'>\n  //         {(provided) => (\n  //           <div {...provided.droppableProps} ref={provided.innerRef}>\n  //             <div>\n  //               {newcandidates.map((candidate, index) => (\n  //                 <Draggable draggableId={candidate.id} key={candidate.id} index={index}>\n  //                   {(provided) => (\n  //                     <div {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef}>\n  //                       {candidate.name} - {candidate.currentStage}\n  //                       {/* <button onClick={() => removeCandidate(candidate.id)}>Remove</button> */}\n  //                     </div>\n  //                   )}\n\n  //                 </Draggable>\n  //               ))}\n  //             </div>\n  //             {provided.placeholder}\n  //         </div>\n  //         )}\n  //         </Droppable>\n  //       </div>\n\n  //       <div style={{ background: 'blue'}}>\n  //         <Droppable droppableId='DIALOGUE'>\n  //         {(provided) => (\n  //           <div {...provided.droppableProps} ref={provided.innerRef}>\n  //           <div>\n  //             {CANDIDATE_STATE.map((candidate, index) => (\n  //               <Draggable draggableId={candidate.id} key={candidate.id} index={index}>\n  //                 {(provided) => (\n  //                   <div {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef}>\n  //                     {candidate.id} - {candidate.state}\n  //                     {/* <button onClick={() => removeCandidate(candidate.id)}>Remove</button> */}\n  //                   </div>\n  //               )}\n\n  //               </Draggable>\n  //             ))}\n  //           </div>\n  //             {provided.placeholder}\n  //         </div>\n  //         )}\n  //         </Droppable>\n  //       </div>\n  //       </div>\n  //     </DragDropContext>\n  //   </>\n  // )\n}\n\nexport default CandidateList\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}