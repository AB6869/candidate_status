{"ast":null,"code":"export const ACTION = {\n  ADD_CANDIDATE: 'addCandidate',\n  UPDATE_CANDIDATE: 'updateCandidate',\n  SEARCH_CANDIDATE: 'searchCandidate',\n  REMOVE_CANDIDATE: 'removeCandidate'\n};\n// const addCandidate = (candidate: Candidate) => {\n//    dispatch({type: ACTION.ADD_CANDIDATE, payload: {candidate: candidate}})\n// };\n\n// const newTodo = (name) => {\n//   return {id: Date.now(), name: name, complete: false}\n// }\n\nexport const reducer = (candidates, action) => {\n  switch (action.type) {\n    case 'addCandidate':\n      return [...candidates, action.payload];\n    // case 'updateCandidate':\n    //   return candidates.map(candidate => {\n    //     if(candidate.id === action.payload.id) {\n    //       return {...candidates }\n    //     } return candidates\n    //   })\n    case 'searchCandidate':\n      return candidates.filter(candidate => candidate.id !== action.payload);\n    case 'removeCandidate':\n      return candidates.filter(candidate => candidate.id !== action.payload);\n    default:\n      return candidates;\n  }\n};","map":{"version":3,"names":["ACTION","ADD_CANDIDATE","UPDATE_CANDIDATE","SEARCH_CANDIDATE","REMOVE_CANDIDATE","reducer","candidates","action","type","payload","filter","candidate","id"],"sources":["/Users/tequam/Projects/case-frontend-tequamnesh/src/hooks/reducer.ts"],"sourcesContent":["import { Candidate } from \"../types/CandidateType\";\n\nexport const ACTION = {\n  ADD_CANDIDATE: 'addCandidate',\n  UPDATE_CANDIDATE: 'updateCandidate',\n  SEARCH_CANDIDATE: 'searchCandidate',\n  REMOVE_CANDIDATE: 'removeCandidate'\n}\n\ntype SearchAction =\n{\n  type: 'updateCandidate' | 'searchCandidate'| 'removeCandidate',\n  payload: string\n}\ntype AddAction =\n{\n  type: 'addCandidate',\n  payload: Candidate\n}\nexport type Action = SearchAction | AddAction\n\n\n// const addCandidate = (candidate: Candidate) => {\n//    dispatch({type: ACTION.ADD_CANDIDATE, payload: {candidate: candidate}})\n// };\n\n// const newTodo = (name) => {\n//   return {id: Date.now(), name: name, complete: false}\n// }\n\nexport const reducer = (candidates: Candidate[], action: Action): Candidate[]=> {\n  switch(action.type){\n    case 'addCandidate':\n      return [...candidates, action.payload]\n    // case 'updateCandidate':\n    //   return candidates.map(candidate => {\n    //     if(candidate.id === action.payload.id) {\n    //       return {...candidates }\n    //     } return candidates\n    //   })\n    case 'searchCandidate':\n      return candidates.filter(candidate => candidate.id !== action.payload)\n    case 'removeCandidate':\n      return candidates.filter(candidate => candidate.id !== action.payload)\n\n    default:\n      return candidates\n  }\n}\n"],"mappings":"AAEA,OAAO,MAAMA,MAAM,GAAG;EACpBC,aAAa,EAAE,cAAc;EAC7BC,gBAAgB,EAAE,iBAAiB;EACnCC,gBAAgB,EAAE,iBAAiB;EACnCC,gBAAgB,EAAE;AACpB,CAAC;AAeD;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAO,MAAMC,OAAO,GAAGA,CAACC,UAAuB,EAAEC,MAAc,KAAiB;EAC9E,QAAOA,MAAM,CAACC,IAAI;IAChB,KAAK,cAAc;MACjB,OAAO,CAAC,GAAGF,UAAU,EAAEC,MAAM,CAACE,OAAO,CAAC;IACxC;IACA;IACA;IACA;IACA;IACA;IACA,KAAK,iBAAiB;MACpB,OAAOH,UAAU,CAACI,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAAC;IACxE,KAAK,iBAAiB;MACpB,OAAOH,UAAU,CAACI,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAAC;IAExE;MACE,OAAOH,UAAU;EACrB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}