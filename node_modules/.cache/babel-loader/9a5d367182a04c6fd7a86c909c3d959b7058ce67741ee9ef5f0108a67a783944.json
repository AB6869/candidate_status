{"ast":null,"code":"export const ACTION = {\n  ADD_CANDIDATE: 'addCandidate',\n  UPDATE_CANDIDATE: 'updateCandidate',\n  SEARCH_CANDIDATE: 'searchCandidate',\n  REMOVE_CANDIDATE: 'removeCandidate'\n};\nexport const reducer = (candidates, action) => {\n  switch (action.type) {\n    case 'addCandidate':\n      return [...candidates, action.payload];\n    case 'updateCandidate':\n      //   candidates.map((candidate) =>\n      //     candidate.id === result.draggableId\n      //     ? {\n      //         ...candidate,\n      //         category: parseInt(result.destination.droppableId),\n      //       }\n      //     : candidate\n      // )\n      return [...candidates, action.payload];\n    case 'searchCandidate':\n      return candidates.filter(candidate => candidate.id !== action.payload);\n    case 'removeCandidate':\n      return candidates.filter(candidate => candidate.id !== action.payload);\n    case 'rearangeArr':\n      const rearangedArr = [...candidates];\n      const [removed] = rearangedArr.splice(action.payload.sourceIndex, 1);\n      rearangedArr.splice(action.payload.destinationIndex, 0, removed);\n      return rearangedArr;\n    default:\n      return candidates;\n  }\n};","map":{"version":3,"names":["ACTION","ADD_CANDIDATE","UPDATE_CANDIDATE","SEARCH_CANDIDATE","REMOVE_CANDIDATE","reducer","candidates","action","type","payload","filter","candidate","id","rearangedArr","removed","splice","sourceIndex","destinationIndex"],"sources":["/Users/tequam/Projects/case-frontend-tequamnesh/src/hooks/reducer.ts"],"sourcesContent":["import { Candidate } from \"../types/CandidateType\";\n\nexport const ACTION = {\n  ADD_CANDIDATE: 'addCandidate',\n  UPDATE_CANDIDATE: 'updateCandidate',\n  SEARCH_CANDIDATE: 'searchCandidate',\n  REMOVE_CANDIDATE: 'removeCandidate'\n}\n\ntype SearchAction =\n{\n  type: 'searchCandidate'| 'removeCandidate',\n  payload: string\n}\ntype AddAction =\n{\n  type: 'addCandidate' | 'updateCandidate',\n  payload: Candidate\n}\ntype RearangeArr =\n{\n  type: 'rearangeArr',\n  payload: { sourceIndex: number, destinationIndex: number}\n}\n\nexport type Action = SearchAction | AddAction | RearangeArr\n\nexport const reducer = (candidates: Candidate[], action: Action): Candidate[]=> {\n  switch(action.type){\n    case 'addCandidate':\n      return [...candidates, action.payload]\n    case 'updateCandidate':\n    //   candidates.map((candidate) =>\n    //     candidate.id === result.draggableId\n    //     ? {\n    //         ...candidate,\n    //         category: parseInt(result.destination.droppableId),\n    //       }\n    //     : candidate\n    // )\n      return [...candidates, action.payload]\n    case 'searchCandidate':\n      return candidates.filter(candidate => candidate.id !== action.payload)\n    case 'removeCandidate':\n      return candidates.filter(candidate => candidate.id !== action.payload)\n    case 'rearangeArr':\n      const rearangedArr = [...candidates];\n      const [removed] = rearangedArr.splice(action.payload.sourceIndex, 1);\n      rearangedArr.splice(action.payload.destinationIndex, 0, removed);\n      return rearangedArr\n    default:\n      return candidates\n  }\n}\n"],"mappings":"AAEA,OAAO,MAAMA,MAAM,GAAG;EACpBC,aAAa,EAAE,cAAc;EAC7BC,gBAAgB,EAAE,iBAAiB;EACnCC,gBAAgB,EAAE,iBAAiB;EACnCC,gBAAgB,EAAE;AACpB,CAAC;AAoBD,OAAO,MAAMC,OAAO,GAAGA,CAACC,UAAuB,EAAEC,MAAc,KAAiB;EAC9E,QAAOA,MAAM,CAACC,IAAI;IAChB,KAAK,cAAc;MACjB,OAAO,CAAC,GAAGF,UAAU,EAAEC,MAAM,CAACE,OAAO,CAAC;IACxC,KAAK,iBAAiB;MACtB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACE,OAAO,CAAC,GAAGH,UAAU,EAAEC,MAAM,CAACE,OAAO,CAAC;IACxC,KAAK,iBAAiB;MACpB,OAAOH,UAAU,CAACI,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAAC;IACxE,KAAK,iBAAiB;MACpB,OAAOH,UAAU,CAACI,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAAC;IACxE,KAAK,aAAa;MAChB,MAAMI,YAAY,GAAG,CAAC,GAAGP,UAAU,CAAC;MACpC,MAAM,CAACQ,OAAO,CAAC,GAAGD,YAAY,CAACE,MAAM,CAACR,MAAM,CAACE,OAAO,CAACO,WAAW,EAAE,CAAC,CAAC;MACpEH,YAAY,CAACE,MAAM,CAACR,MAAM,CAACE,OAAO,CAACQ,gBAAgB,EAAE,CAAC,EAAEH,OAAO,CAAC;MAChE,OAAOD,YAAY;IACrB;MACE,OAAOP,UAAU;EACrB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}