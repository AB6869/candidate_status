{"ast":null,"code":"var _jsxFileName = \"/Users/tequam/Projects/case-frontend-tequamnesh/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport CandidateList from './components/CandidateList';\nimport CandidateForm from './components/CandidateForm';\nimport { Candidates } from './data/CandidateData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [candidates, setCandidates] = useState(Candidates);\n  console.log('candidates', candidates);\n  const addCandidate = candidate => {\n    setCandidates([...candidates, candidate]);\n  };\n  const updateCandidate = (id, updatedCandidate) => {\n    const updatedList = candidates.map(c => c.id === id ? updatedCandidate : c);\n    setCandidates(updatedList);\n  };\n  const removeCandidate = id => {\n    const updatedList = candidates.filter(c => c.id !== id);\n    setCandidates(updatedList);\n  };\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(CandidateList, {\n        candidates: candidates,\n        removeCandidate: removeCandidate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/add\",\n      element: /*#__PURE__*/_jsxDEV(CandidateForm, {\n        onSubmit: addCandidate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ebPU50SeBakfjYJ3h1JUNPx3L8w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Routes","Route","CandidateList","CandidateForm","Candidates","jsxDEV","_jsxDEV","App","_s","candidates","setCandidates","console","log","addCandidate","candidate","updateCandidate","id","updatedCandidate","updatedList","map","c","removeCandidate","filter","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["/Users/tequam/Projects/case-frontend-tequamnesh/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport CandidateList from './components/CandidateList';\nimport CandidateForm from './components/CandidateForm';\nimport { Candidate } from './types/CandidateType';\nimport { Candidates } from './data/CandidateData';\n\nconst App: React.FC = () => {\n  const [candidates, setCandidates] = useState<Candidate[]>(Candidates);\n  console.log('candidates', candidates)\n\n  const addCandidate = (candidate: Candidate) => {\n    setCandidates([...candidates, candidate]);\n  };\n\n  const updateCandidate = (id: number, updatedCandidate: Candidate) => {\n    const updatedList = candidates.map((c) => (c.id === id ? updatedCandidate : c));\n    setCandidates(updatedList);\n  };\n\n  const removeCandidate = (id: number) => {\n    const updatedList = candidates.filter((c) => c.id !== id);\n    setCandidates(updatedList);\n  };\n\n  return (\n    <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <CandidateList candidates={candidates} removeCandidate={removeCandidate} />}\n        />\n        <Route\n          path=\"/add\"\n          element={<CandidateForm onSubmit={addCandidate} />}\n        />\n        {/* <Route\n          path=\"/update/:id\"\n          element={(props) => (\n            <CandidateForm\n              onSubmit={(updatedCandidate) =>\n                updateCandidate(props.match.params.id, updatedCandidate)\n              }\n              candidate={candidates.find((c) => c.id === props.match.params.id)}\n            />\n          )}\n        /> */}\n    </Routes>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,aAAa,MAAM,4BAA4B;AAEtD,SAASC,UAAU,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAcK,UAAU,CAAC;EACrEO,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,UAAU,CAAC;EAErC,MAAMI,YAAY,GAAIC,SAAoB,IAAK;IAC7CJ,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEK,SAAS,CAAC,CAAC;EAC3C,CAAC;EAED,MAAMC,eAAe,GAAGA,CAACC,EAAU,EAAEC,gBAA2B,KAAK;IACnE,MAAMC,WAAW,GAAGT,UAAU,CAACU,GAAG,CAAEC,CAAC,IAAMA,CAAC,CAACJ,EAAE,KAAKA,EAAE,GAAGC,gBAAgB,GAAGG,CAAE,CAAC;IAC/EV,aAAa,CAACQ,WAAW,CAAC;EAC5B,CAAC;EAED,MAAMG,eAAe,GAAIL,EAAU,IAAK;IACtC,MAAME,WAAW,GAAGT,UAAU,CAACa,MAAM,CAAEF,CAAC,IAAKA,CAAC,CAACJ,EAAE,KAAKA,EAAE,CAAC;IACzDN,aAAa,CAACQ,WAAW,CAAC;EAC5B,CAAC;EAED,oBACEZ,OAAA,CAACN,MAAM;IAAAuB,QAAA,gBACHjB,OAAA,CAACL,KAAK;MACJuB,IAAI,EAAC,GAAG;MACRC,OAAO,eACLnB,OAAA,CAACJ,aAAa;QAACO,UAAU,EAAEA,UAAW;QAACY,eAAe,EAAEA;MAAgB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/E,CAAC,eACFvB,OAAA,CAACL,KAAK;MACJuB,IAAI,EAAC,MAAM;MACXC,OAAO,eAAEnB,OAAA,CAACH,aAAa;QAAC2B,QAAQ,EAAEjB;MAAa;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAYE,CAAC;AAEb,CAAC;AAACrB,EAAA,CA1CID,GAAa;AAAAwB,EAAA,GAAbxB,GAAa;AA4CnB,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}